package asteroids.model.programs;import be.kuleuven.cs.som.annotate.*;public abstract class UnaryExpression extends ComposedExpression {	@Model	protected UnaryExpression(Expression operand, int line, int column) {		super(line, column);		if (!canHaveAsOperandAt(operand,1))			throw new IllegalArgumentException(this + "" + operand);		setOperandAt(1, operand);	}	@Override	@Basic	public final int getNbOperands() {		return 1;	}	@Override	public final Expression getOperandAt(int index)			throws IndexOutOfBoundsException {		if (index != 1)			throw new IndexOutOfBoundsException();		return getOperand();	}	@Basic	public Expression getOperand() {		return operand;	}		@Override	public boolean canHaveAsOperandAt(Expression expression, int index) {		return super.canHaveAsOperandAt(expression, index) && (index == 1);	}	@Override	protected void setOperandAt(int index, Expression operand) {		this.operand = operand;	}	private Expression operand;}